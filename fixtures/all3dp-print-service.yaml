swagger: "2.0"
info:
  description: |
    This is the REST-API for [price.all3dp.com](http://price.all3dp.com)

    [About All3DP](https://all3dp.com)

    For this sample, you can use the api key `special-key` to test the authorization filters
  version: "1.0.0"
  title: All3DP Print Engine REST-API
  termsOfService: https://all3dp.com/3dp-price-comparison-terms-of-service/
  contact:
    name: jonathan@all3dp.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: price.all3dp.com
basePath: /v1
schemes:
  - https

paths:
  /model:
    post:
      tags:
        - model
      summary: Upload a new 3d model to the prining engine
      description: |
        You have to use this REST-API-Call or /fetchModel to add a new 3d model to the printing engine.
      operationId: uploadModel
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          description: The 3D-model file (only .stl-files are supported right now)
          required: true
        - in: formData
          name: unit
          description: The unit (mm, inch, cm, m) of the model
          required: true
          type: string
          enum:
          - mm
          - inch
          - cm
          - m
        - in: formData
          name: sessionToken
          description: If you want to bind the uploaded model to your useraccount, you have to provide a session-token
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            properties:
              modelId:
                type: string
        "405":
          description: Invalid input

  /fetchModel:
    get:
      tags:
        - model
      summary: The printing engine will download a 3d-model from any location (url)
      description: |
        This is alternative way to upload a 3d-model, by providing a link to a source.
        The call is blocking until the download finished or failed.
      operationId: fetchModel
      produces:
        - application/json
      parameters:
        - in: query
          name: modelLocation
          type: string
          description: The URL to the .stl file
          required: true
        - in: query
          name: unit
          description: The unit (mm, inch, cm, m) of the model
          required: true
          type: string
          enum:
          - mm
          - inch
          - cm
          - m
        - in: query
          name: sessionToken
          description: If you want to bind the uploaded model to your useraccount, you have to provide a session-token
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            properties:
              modelId:
                type: string
        "405":
          description: Invalid input

  /models:
    get:
      tags:
        - model
      summary: "Get 3d-model properties about all the models you have uploaded"
      description: ""
      operationId: getAllModels
      produces:
        - application/json
      parameters:
        - in: query
          name: sessionToken
          type: string
          required: true

      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Model"
        "401":
          description: Not authorized

  /model/{modelId}:
    get:
      tags:
        - model
      summary: Get basic informations about a model
      description: ""
      operationId: getModel
      produces:
        - application/json
      parameters:
        - in: path
          name: modelId
          required: true
          type: string
        - in: query        # die downloadUrl wird nicht ausgegeben wenn das model einem user zugeordnet ist
          name: sessionToken
          description: You get the designer commisson and downloadUrl only if you provide a session token
          required: false
          type: string
      produces:
        - application/json
      responses:
        "404":
          description: Model not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Model"

    put:
      tags:
        - model
      summary: Change the commisson for the model
      description: ""
      operationId: changeModel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: modelId
          required: true
          type: string
        - in: body
          name: model
          required: true
          schema:
            type: object
            properties:
              sessionToken:
                type: string
              commisson:
                type: number
              commissonCurrency:
                type: string
      responses:
        "200":
          description: successful changed
        "400":
          description: invalid model
        "401":
          description: Not authorized


    delete:
      tags:
        - model
      summary: Deletes a model
      description: ""
      operationId: deleteModel
      produces:
        - application/json
      parameters:
        - in: header
          name: sessionToken
          description: ""
          required: true
          type: string
        - in: path
          name: modelId
          description: Model to delete
          required: true
          type: string
      responses:
        "200":
          description: Model deleted
        "404":
          description: Invalid Model
        "403":
          description: No authorisation to delete the model

  /materialConfigurations:
    #todo filtern
    get:
      tags:
        - material
      summary: Get the structure of the materials
      description: "You can use the filters to narrow down your search"
      operationId: getMaterialConfigurations
      produces:
        - application/json
      parameters:
        - in: query
          name: materialGroupFilter
          type: string
        - in: query
          name: materialFilter
          type: string
        - in: query
          name: finishGroupFilter
          type: string
        - in: query
          name: printingServiceFiler
          type: string
          enum:
            - 'imaterialise'
            - 'shapeways'
            - 'sculpteo'
        - in: query
          name: colorFilter
          type: string
      responses:
        "200":
          description: The Material Configurations
          schema:
            $ref: "#/definitions/MaterialConfiguration"

  /model/{modelId}/offer/{materialConfigurationId}:
    get:
      tags:
       - offer
      summary: Get an offer (price) for a modell and a configuration
      description: |
        Falid parameters for `queryMode` are:
        [`instanceResponse`, `blockingUntilFinalPrices`, `blockingUntilEstimatesOrFinalPrices`]
        The default is `blockingUntilFinalPrices`
      operationId: getOffer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: modelId
          description: The model
          required: true
          type: string
        - in: path
          description: "Use the /materialConfigurations"
          name: materialConfigurationId
          type: string
          required: true
        - in: query
          name: queryMode
          description: "which kind of response"
          type: string
          default: "blockingUntilFinalPrices"
          enum:
          - instanceResponse
          - blockingUntilFinalPrices
          - blockingUntilEstimatesOrFinalPrices
        - in: query
          name: scale
          type: number
          format: float
          description: "Scaling of the model (default 1.0)"
        - in: query
          name: countryCode
          type: string
        - in: query
          name: currency
          type: string
          description: "The currency (default 'USD')"
          enum:
            - USD
            - EUR
        - in: query
          name: promotionCode
          type: string
        - in: query
          name: sessionToken
          required: false
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Offer"
        "202":
          description:
            Prices are still calculating.
            You get a partial / estimate result.
          schema:
            $ref: "#/definitions/Offer"
        "400":
          description: Invalid parameters
        "404":
          description: Model not found

  /model/{modelId}/offers:
    get:
      tags:
        - offer
      operationId: getOffers
      produces:
        - application/json
      parameters:
        - in: path
          name: modelId
          required: true
          type: string
        - in: query
          name: queryMode
          description: "which kind of response"
          type: string
          default: "blockingUntilFinalPrices"
          enum:
          - instanceResponse
          - blockingUntilFinalPrices
          - blockingUntilEstimatesOrFinalPrices
        - in: query
          name: scale
          description: "without parameters the model has it's origial size"
          type: number
        - in: query
          name: currency
          type: string
          default: USD
          description: "If no value is provied USD is default"
          enum:
            - USD
            - EUR
        - in: query
          name: countryCode
          description: "Required for shipping costs (ISO 3166 A-2)"
          type: string
        - in: query
          name: promotionCode
          type: string
        - in: query
          name: materialGroupFilter
          type: string
        - in: query
          name: materialFilter
          type: string
        - in: query
          name: finishGroupFilter
          type: string
        - in: query
          name: printingServiceFiler
          type: string
          enum:
            - 'imaterialise'
            - 'shapeways'
            - 'sculpteo'
        - in: query
          name: colorFilter
          type: string
        - in: query
          name: sessionToken
          required: false
          type: string
      responses:
        "200":
          description: All offers have been calculated.
          schema:
            type: array
            items:
              $ref: "#/definitions/Offer"
        "202":
          description:
            Offers are still calculating.
            You get only a partial result.
          schema:
            type: array
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: Invalid parameters
        "404":
          description: Model not found


  /estimateOffers:
    get:
      summary: Estimate prices based on basic 3d-model properties
      description: |
        Estimation is based on the volume, surface and bounding box of the 3d-model.
        The unit has to be in 'mm'
      operationId: estimateOffers
      tags:
        - offer
      produces:
        - application/json
      parameters:
        - in: query
          name: volume
          required: true
          type: number
        - in: query
          name: surface
          required: true
          type: number
        - in: query
          name: bboxX
          description: "X axis of the bounding box"
          required: true
          type: number
        - in: query
          name: bboxY
          description: "Y axis of the bounding box"
          required: true
          type: number
        - in: query
          name: bboxZ
          description: "Z axis of the bounding box"
          required: true
          type: number
        - in: query
          name: currency
          type: string
          default: USD
          description: "If no value is provied USD is default"
          enum:
            - USD
            - EUR
        - in: query
          name: materialGroupFilter
          type: string
        - in: query
          name: materialFilter
          type: string
        - in: query
          name: finishGroupFilter
          type: string
        - in: query
          name: printingServiceFiler
          type: string
          enum:
            - 'imaterialise'
            - 'shapeways'
            - 'sculpteo'
        - in: query
          name: colorFilter
          type: string
      responses:
        "200":
          description: All offers have been calculated.
          schema:
            type: array
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: Invalid parameters


  /cart:
    post:
      tags:
       - offer
      summary: Get the prices for a shopping cart
      description:
        "Ether provide countryCode or a address"
      operationId: getCart
      consumes:
        - application/json
      produces:
        - application/json

      parameters:
        - in: body
          name: configurations
          description:
            the configuration for each item in your cart.

          required: true
          schema:
            type: object
            properties:
              configuration:
                type: array
                items:
                  $ref: "#/definitions/CartItem"
              address:
                $ref: "#/definitions/Address"
              countryCode:
                type: string
              currency:
                type: string
              promotionCode:
                type: string
            required:
              - configuration

      responses:
        "200":
          description:
            Returns the offers for each configuration. And a total price for the whole cart.
          schema:
            type: object
            properties:
              offers:
                type: array
                items:
                  $ref: "#/definitions/Offer"
              totalPrice:
                $ref: "#/definitions/Price"

        "400":
          description: Invalid parameters
        "404":
          description: Model not found

  /order:
    post:
      tags:
       - order
      operationId: createOrder
      summary: Executes an Order
      description: |
        This call executes the order / production of the 3d-model.
        Du bezahlt mit den Zahlungsinformationen die du in unserem Dashboard hinerlegt hast
        **Do this only on your private server! Never via Client-JS calls!**
      operationId: order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: configurations
          required: true
          schema:
            type: object
            properties:
              cartItems:
                type: array
                items:
                  $ref: "#/definitions/CartItem"
              address:
                $ref: "#/definitions/Address"
              totalPrice:
                type: number
              currency:
                type: string
              promotionCode:
                type: string
              apiKey:
                type: string
              secretKey:  # das muss in den html header
                type: string

            required:
            - cartItems
            - address
            - totalPrice
            - apiKey
            - secretKey
            - currency

      responses:
        "200":
          description:
            todo
          schema:
            type: object
            properties:
              orderId:
                type: string

        "400":
          description: Invalid parameters
        "404":
          description: Model not found


  /orderWithStripe:
    post:
      tags:
       - order
      summary: Order
      description:
        ""
      operationId: createOrderWithStripe
      consumes:
        - application/json
      produces:
        - application/json

      parameters:
        - in: body
          name: configurations
          description:
            the configuration for each item in your cart.

          required: true
          schema:
            type: object
            properties:
              cartItems:
                type: array
                items:
                  $ref: "#/definitions/CartItem"
              address:
                $ref: "#/definitions/Address"
              totalPrice:
                type: number
              currency:
                type: string
              promotionCode:
                type: string
              stripeToken:
                type: string

            required:
            - cartItems
            - address
            - totalPrice
            - stripeToken
            - currency

      responses:
        "200":
          description:
            todo
          schema:
            type: object
            properties:
              orderId:
                type: string

        "400":
          description: Invalid parameters
        "404":
          description: Model not found


  /orderWithPaypal:
    post:
      tags:
       - order
      summary: Order
      description:
        ""
      operationId: createOrderWithPaypal
      consumes:
        - application/json
      produces:
        - application/json

      parameters:
        - in: body
          name: configurations
          description:
            the configuration for each item in your cart.

          required: true
          schema:
            type: object
            properties:
              cartItems:
                type: array
                items:
                  $ref: "#/definitions/CartItem"
              address:
                $ref: "#/definitions/Address"
              totalPrice:
                type: number
              currency:
                type: string
              promotionCode:
                type: string

            required:
              - cartItems
              - address
              - totalPrice
              - currency

      responses:
        "200":
          description:
            todo
          schema:
            type: object
            properties:
              paypalPaymentUrl:
                type: string
              orderId:
                type: string

        "400":
          description: Invalid parameters
        "404":
          description: Model not found

  /order/{orderId}:
    get:
      tags:
        - order
      operationId: getOrderStatus
      produces:
        - application/json
      parameters:
        - in: path
          name: orderId
          required: true
          type: string
      responses:
        "200":
          description:
            Todo
          schema:
            type: object
            properties:
              status:
                type: string
                default: newOrderNotPaidSoFar
                enum:
                - newOrderNotPaidSoFar   # der bezahlungsprozess wurde noch nicht gestartet
                - paymentPending    # bezahlt, aber transaktion vom paypal noch nicht bestätig
                - paymentVerified   # bezahlt, und überprüft
                - paymentRejected   # abgelehnt

                # ab hier wurde bezahlt
                - printingServiceOrdered
                - printingServiceModelsVerified
                - printingServiceInproduction
                - printingServiceShipped

                - printingServiceRejected

                # geld wurde zurücküberwiesen
                - faildAndRefunded
              orderPaid:
                type: boolean

        "404":
          description: Order not found

  /model/subscribeToNewOffers:
    get:
      tags:
        - offer
      summary: Websocket api (private)
      description: ""
      operationId: subscribeToNewOffers
      produces:
        - application/json
      parameters:
        - in: query
          name: modelId
          required: true
          type: string
        - in: query
          name: scale
          description: "without parameters the model has it's origial size"
          type: number
        - in: query
          name: currency
          type: string
          default: USD
          description: "If no value is provied USD is default"
          enum:
            - USD
            - EUR
        - in: query
          name: countryCode
          description: "Required for shipping costs (ISO 3166 A-2)"
          type: string
        - in: query
          name: promotionCode
          type: string
      responses:
        "200":
          description: All offers have been calculated.
          schema:
            $ref: "#/definitions/Offer"
        "400":
          description: Invalid parameters
        "404":
          description: Model not found


definitions:

  MaterialConfiguration:
    type: array
    items:
      type: object
      properties:
        materialGroup:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
        material:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
        finishGroup:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
        finish:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
        printingService:
          type: string
          enum:
          - imaterialise
          - shapeways
          - sculpteo
        color:
          type: string
        materialConfigurationId:
          type: string

  Model:
    type: object
    properties:
      modelId:
        type: string
      filename:
        type: string
      unit:
        type: string
      downloadUrl:
        type: string
      mesh:
        type: object
        properties:
          volume:
            type: number
          area:
            type: number
          boundingBox:
            type: object
            properties:
              x:
                type: number
              y:
                type: number
              z:
                type: number
      designerCommisson:  ## cash in USD
        type: number
      designerCommissonCurrency:
        type: string


  Address:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      countryCode:
        type: string
    required:
    - firstName
    - lastName

#  MaterialSelector:
#    type: object
#    properties:
#      materialGroup:
#        type: string
#      material:
#        type: string
#      finishGroup:
#        type: string
#      printingService:
#        type: string
#        enum:
#          - 'imaterialise'
#          - 'shapeways'
#          - 'sculpteo'
#      color:
#        type: string


  CartItem:
    type: object
    properties:
      modelId:
        type: string
      materialConfigurationId:
        type: string
      scale:
        type: number
      amount:
        type: number
        format: integer
        default: 1

    required:
    - scale
    - modelId
    - materialConfigurationId

  Price:
    type: object
    properties:
      net:
        type: number
      shipping:
        type: number
      tax:
        type: number
      total:
        type: number
      currency:
        type: string
      hasPrice:
        type: boolean
      errorMsg:
        type: string
      state:
        type: string
        enum:
          - checkoutPossible  # final success state
          - estimate
          - inProgress
          - error
          - notPrintable
    required:
    - net
    - tax
    - currency
    - hasPrice
    - errorMsg
    - state

#  Cart:
#    type: object
#    properties:
#      configurations:
#        type: array
#        items:
#          $ref: "#/definitions/ModelConfiguration"


  Offer:
    type: object
    properties:
      materialConfigurationId:
        type: string
      price:
        $ref: "#/definitions/Price"



